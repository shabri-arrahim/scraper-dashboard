name: CI/CD Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create .env file with environment variables from GitHub Secrets
            cat <<EOF > /home/nino/scraper-dashboard/.env
            # Security Settings
            ENVIRONMENT=production

            API_TOKEN="${{ secrets.API_TOKEN }}"
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
            RATE_LIMIT=100

            CELERY_BROKER_URL=redis://redis:6379/0
            CELERY_RESULT_BACKEND=redis://redis:6379/0

            # Application Settings
            DEBUG=false
            MAX_LOG_LINES=1000

            # Telegram Notifications (Optional)
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
            EOF

            cd /home/nino/scraper-dashboard
            git pull origin develop
            docker compose -f compose.prod.yaml down --remove-orphans
            docker compose -f compose.prod.yaml up --build -d

            # check if there are any dangling images and remove them
            if [ "$(docker images -f "dangling=true" -q)" ]; then
              echo "Removing dangling images..."
              docker rmi $(docker images -f "dangling=true" -q)
            else
              echo "No dangling images to remove."
            fi

            # add continer to tunnel network
            docker network connect tunnel scraper-dash-fastapi
